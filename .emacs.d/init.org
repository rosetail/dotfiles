* early-init.el
#+begin_src emacs-lisp :tangle early-init.el
  ;;; -*- lexical-binding: t; -*-
  ;; taken from doom emacs

  ;; Defer garbage collection further back in the startup process
  (setq gc-cons-threshold most-positive-fixnum)


  ;; Prevent the glimpse of un-styled Emacs by disabling these UI elements early.
  (push '(menu-bar-lines . 0) default-frame-alist)
  (push '(tool-bar-lines . 0) default-frame-alist)
  (push '(vertical-scroll-bars) default-frame-alist)

  ;; Resizing the Emacs frame can be a terribly expensive part of changing the
  ;; font. By inhibiting this, we easily halve startup times with fonts that are
  ;; larger than the system default.
  (setq frame-inhibit-implied-resize t)

  ;; Prevent unwanted runtime builds in gccemacs (native-comp); packages are
  ;; compiled ahead-of-time when they are installed and site files are compiled
  ;; when gccemacs is installed.
  (setq comp-deferred-compilation nil)
#+end_src
* initial setup
#+begin_src emacs-lisp :tangle yes
  ;; measure startup time
  (add-hook 'emacs-startup-hook
            (lambda ()
              (message "Emacs ready in %s with %d garbage collections."
                       (format "%.2f seconds"
                               (float-time
                                (time-subtract after-init-time before-init-time)))
                       gcs-done)))


  ;; re-enable garbage collection after everything is done
  (add-hook 'emacs-startup-hook
            (lambda ()
              (setq gc-cons-threshold 16777216 ; 16mb
                    gc-cons-percentage 0.1)))

  ;; intialize packages and add repositories
  (require 'package)
  (add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/"))
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
  (package-initialize)
  (setq package-archive-priorities
        '(("melpa-stable" . 2)
          ("gnu" . 1)
          ("melpa" . 0)))

  ;; set up use-package
  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

* visual customization
#+begin_src emacs-lisp :tangle yes
  (use-package doom-modeline)
  ;; load theme
  (use-package base16-theme
    :init (load-theme 'base16-eighties t)
    :custom
    ;; skip startup screen and go to scratch buffer
    ;; TODO: see about using general-custom
    (inhibit-startup-screen t))
#+end_src

* evil mode and global keybindings
#+begin_src emacs-lisp :tangle yes
  (use-package general)

  (use-package evil
    :demand t
    ;; :after general
    :init
    (setq-default cursor-in-non-selected-windows nil)
    (setq evil-want-keybinding nil)
    :general

    (:keymaps 'global-map
              :states '(motion normal visual operator)
              "n"		'evil-next-visual-line
              "N"		'evil-join
              "e"		'evil-previous-visual-line
              "E"		'evil-lookup
              "k"		'evil-search-next
              "K"		'evil-search-previous
              "l"		'undo-tree-undo
              "f"		'evil-forward-word-end
              "F"		'evil-forward-WORD-end
              "t"		'evil-find-char
              "T"		'evil-find-char-backward
              "j"		'evil-find-char-to
              "J"		'evil-find-char-to-backward
              "C-."	'next-important-buffer
              "S-SPC"	'evil-execute-in-god-state
              "SPC"	(lookup-key global-map (kbd "C-c"))
              [escape]	'keyboard-quit
              "TAB"	'indent-for-tab-command)

    (:keymaps '(ivy-mode-map ivy-minibuffer-map)
              "C-e" 'ivy-previous-line)
    :config
    (general-translate-key nil '(motion normal visual operator)
      "u" "i"
      "U" "I"
      "I" "L"
      "i" "l")

    (evil-mode 1))

  ;; enable vim keybindings everywhere
  (use-package evil-collection
    :after evil
    :init
    (setq evil-collection-setup-minibuffer t
          evil-collection-company-use-tng nil) ; keep company behavior default, not like vim

    ;; translate hjkl to hnei. Also translate with C- and M- prefixes
    (defun my-hjkl-rotation (_mode mode-keymaps &rest _rest)
      (evil-collection-translate-key 'normal mode-keymaps
        "n" "j"
        "e" "k"
        "i" "l"
        "j" "e"
        "k" "n"
        "l" "i"
        (kbd "C-n") (kbd "C-j")
        (kbd "C-e") (kbd "C-k")
        (kbd "C-k") (kbd "C-n")
        (kbd "C-j") (kbd "C-e")
        (kbd "M-n") (kbd "M-j")
        (kbd "M-e") (kbd "M-k")
        (kbd "M-k") (kbd "M-n")
        (kbd "M-j") (kbd "M-e"))
      ;; called after evil-collection makes its keybindings
      (add-hook 'evil-collection-setup-hook #'my-hjkl-rotation)))


#+end_src
