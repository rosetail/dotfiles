#!/bin/sh
emacs --batch --eval "
    (progn
      ;; set up straight
      (defvar bootstrap-version)
      (let ((bootstrap-file
             (expand-file-name \"straight/repos/straight.el/bootstrap.el\" user-emacs-directory))
            (bootstrap-version 5))
        (unless (file-exists-p bootstrap-file)
          (with-current-buffer
              (url-retrieve-synchronously
               \"https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el\"
               'silent 'inhibit-cookies)
            (goto-char (point-max))
            (eval-print-last-sexp)))
        (load bootstrap-file nil 'nomessage))
      (straight-use-package 'dtache)

      ;; now we actually call dtache
      (require 'dtache)
      (dtache-setup)
      (dtache-shell-command \"${@}\"))
"
# to find the right socket to connect to, just look at the most recent files in /dmt/dtache
# hopefully the most recent file will be the log file for the process.
# use it to get the socket name
logFile="/tmp/dtache/$(ls -At /tmp/dtache | head -n1)"
socketFile="${logFile%.log}.socket" 

# if the socket file exists, attach to it. otherwise, output the log contents
if [[ -S "${socketFile}" ]]; then
    echo hi
    dtach -a "${socketFile}"
else
    cat "${logFile}"
    # output the normal finish message so it looks like we were still able to attach
    echo "[EOF - dtach terminating]"
fi
